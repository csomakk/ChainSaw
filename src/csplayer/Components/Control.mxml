<?xml version="1.0" encoding="utf-8"?>
<Group xmlns:fx="http://ns.adobe.com/mxml/2009"
       xmlns="library://ns.adobe.com/flex/spark"
       xmlns:Components="csplayer.Components.*"
       width="563" height="63" initialize="initCompleteHandler(event)">
    <fx:Script>
		<![CDATA[
        import csplayer.Classes.CsSoundChannel;
        import csplayer.Classes.SoundTrack;
        import csplayer.Components.Playlist.PlayList;

        import mx.events.FlexEvent;
        import mx.managers.PopUpManager;

        public var soundChannel:CsSoundChannel = new CsSoundChannel((Control)(this));

        [Bindable]
        private var paused:Number = -1;
        [Bindable]
        public var currentSong:SoundTrack;
        public static var instance:Control;
        public var isSoundPlaying:Boolean = false;

        public function play():void {
            if (isSoundPlaying) stop();
            if (PlayList.instance == null) initCompleteHandler(null);
            currentSong = PlayList.instance.current();
            if (currentSong) {
                if (paused != -1) {
                    soundChannel.playSound(currentSong.urlString, paused);
                    paused = -1;
                } else {
                    soundChannel.myChannel.stop();
                    soundChannel.playSound(currentSong.urlString);
                }

                updateSongInfo();
                isSoundPlaying = true;
            }
        }

        public function onSoundComplete(e:Event = null):void {
            isSoundPlaying = false;
            nextSong();
        }

        private function updateSongInfo():void {
            current.text = currentSong.title + " \tby " + currentSong.artist
        }

        public function nextSong():void {
            currentSong = PlayList.instance.next();
            soundChannel.myChannel.stop();
            soundChannel.playSound(currentSong.urlString);
            updateSongInfo();
        }

        public function prevSong():void {
            currentSong = PlayList.instance.prev();
            soundChannel.myChannel.stop();
            soundChannel.playSound(currentSong.urlString);
            updateSongInfo();
        }

        protected function initCompleteHandler(event:FlexEvent):void {
            statusLabel.text = "";
            instance = this;
        }

        protected function pause(event:MouseEvent = null):void {
            paused = soundChannel.myChannel.position;
            stop();
        }

        public function stop():void {
            soundChannel.myChannel.stop();
            isSoundPlaying = false;
        }

        protected function onSettingsClick(event:MouseEvent):void {
            SettingsPopup.instance.x = (stage.stageWidth - SettingsPopup.instance.width) / 2;
            SettingsPopup.instance.y = (stage.stageHeight - SettingsPopup.instance.height) / 2;
            PopUpManager.addPopUp(SettingsPopup.instance, this, true);
        }
        ]]>
	</fx:Script>
    <Rect width="100%" height="100%">
        <fill>
            <SolidColor color="0xFBFBFB"/>
        </fill>
    </Rect>
    <HSlider id="seekSlider" left="83" right="118" bottom="3"/>
    <Label id="current" y="10" left="131" fontSize="15" fontWeight="bold" text="Label"/>
    <Label id="seekText" x="5" bottom="3" width="70" text="0:00 / 3:21" textAlign="center"/>
    <Image toolTip="pause" click="pause()" visible="{paused==-1}" x="50" y="6"
           source="icons/1342554996_Pause Blue Button.png"/>
    <Image visible="{paused!=-1}" x="50" top="6" click="play()"
           source="icons/1342554978_Play Blue Button.png" toolTip="play"/>
    <Image x="10" top="4" click="prevSong()" source="icons/1342556807_Previous-Track.png"
           toolTip="previous"/>
    <Image x="83" top="4" click="nextSong()" source="icons/1342556816_Next-Track.png"
           toolTip="next"/>
    <Components:LabelsRenderer x="126" y="25" width="319" data="{currentSong}"/>
    <Image y="3" right="118" width="17" height="17" smooth="true" click="onSettingsClick(event)"
           source="icons/1342893898_monotone_cog_settings_gear.png" toolTip="settings"/>
    <Image y="3" right="136" width="17" height="17" smooth="true"
           source="icons/1342554931_sound.png" toolTip="amplification"/>
    <Image y="5" right="155" width="14" height="14" smooth="true" source="icons/1342644079_mail.png"
           toolTip="bug report / feature request"/>
    <Label id="statusLabel" right="160" top="25" backgroundColor="#FBFBFB" text="Label"
           textAlign="right" verticalAlign="middle"/>
    <Components:Rating y="5" right="177" soundTrack="{currentSong}"/>


</Group>
